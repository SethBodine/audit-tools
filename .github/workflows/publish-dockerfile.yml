name: Create and publish a Docker image

on:
  push:
    branches:
     - 'main'
  schedule:
    - cron:  '0 0 * * 1'    # Force Build Weekly
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  #IMAGE_NAME: SethBodine/audit-tools

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      - name: Delete Older Packages
        uses: actions/delete-package-versions@v5
        with: 
          package-name: 'audit-tools'
          package-type: 'container'
          min-versions-to-keep: 10

      - name: Check disk usage - Pre
        run: df -h

      - name: Delete huge unnecessary tools folder
        run: |
          rm -rf /opt/hostedtoolcache
          find . -maxdepth 1 -mindepth 1 '!' -path ./containerd '!' -path ./actionarchivecache '!' -path ./runner '!' -path ./runner-cache -exec rm -rf '{}' ';'

      - name: Check disk usage - Post
        run: df -h

      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value={{ date 'YYYY-MM-DD' }}-${{ github.sha }}
            type=sha,prefix=sha-

            # type=schedule
            # type=ref,event=tag
            # type=ref,event=branch,suffix=-{{ sha }}
            # type=ref,event=pr
            # type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            # type=edge,branch=$repo.default_branch
            # type=ref,event=branch,priority=1000
          labels: |
            org.opencontainers.image.title=${{ github.repository }}
            org.opencontainers.image.description=Built from commit ${{ github.sha }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.meta.outputs.created }}
            org.opencontainers.image.authors=${{ github.actor }}
            org.opencontainers.image.trigger=${{ github.event_name }}
            org.opencontainers.image.commit.message=${{ github.event.head_commit.message }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: . 
          file: ./containerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.meta.outputs.tags }}
          #  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          # tags: ghcr.io/audit-tools
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
