#!/bin/sh 

LOGFILE="/tmp/updatetools.$(date +'%Y%m%d.%H.%m.%s').log"

echo "Update Script Started: $(date +'%Y-%m-%d %H:%m:%s')" >${LOGFILE}

# Update .bashrc
echo '[ ! -z "$TERM" -a -r /etc/motd ] && cat /etc/motd && cat /etc/motd_updates' >>~/.bashrc

# Update Repos
sudo apt update >>${LOGFILE}
sudo apt -y upgrade >>${LOGFILE}
sudo apt -y dist-upgrade >>${LOGFILE}
sudo apt -y autoremove >>${LOGFILE}

echo "\n** Update Tools ** Packages now up to date.\n" > /proc/$(pidof /bin/bash)/fd/0

echo "Updating Github Repos" >>${LOGFILE}
cd /opt
find . -name .git -type d | xargs -n1 -P4 -I% git --git-dir=% --work-tree=%/.. pull -p >>${LOGFILE} 
echo "\n** Update Tools ** git repos now up to date.\n" > /proc/$(pidof /bin/bash)/fd/0

echo "Updating pip packages" >>${LOGFILE}
sudo pip install pip pynacl azure-cli aws-list-all --upgrade --root-user-action=ignore
echo "\n** Update Tools ** azure-cli now up to date.\n" > /proc/$(pidof /bin/bash)/fd/0

echo "Updating Steampipe" >>${LOGFILE}
sudo /bin/sh -c "$(curl -fsSL https://steampipe.io/install/steampipe.sh)" >>${LOGFILE}
steampipe plugin install aws >>${LOGFILE}
steampipe plugin install awscfn >>${LOGFILE}
steampipe plugin install azure >>${LOGFILE}
steampipe plugin install azuread >>${LOGFILE}
steampipe plugin install gcp >>${LOGFILE}
steampipe plugin install googledirectory >>${LOGFILE}
steampipe plugin install googleworkspace >>${LOGFILE}
steampipe plugin install net >>${LOGFILE}
steampipe plugin install kubernetes >>${LOGFILE}
steampipe plugin install github >>${LOGFILE}
steampipe plugin install terraform >>${LOGFILE}
steampipe plugin install digitalocean >>${LOGFILE}
steampipe plugin install microsoft365 >>${LOGFILE}
steampipe plugin install snowflake >>${LOGFILE}
steampipe plugin install openai >>${LOGFILE}
steampipe plugin install crtsh >>${LOGFILE}
steampipe plugin install azuredevops >>${LOGFILE}
steampipe plugin install mongodbatlas >>${LOGFILE}
steampipe plugin install okta >>${LOGFILE}
steampipe plugin install alicloud >>${LOGFILE}
steampipe plugin install digitalocean >>${LOGFILE}
steampipe plugin install oci >>${LOGFILE}

# steampipe plugin update --all >>${LOGFILE} 

echo "Updating Powerpipe" >>${LOGFILE}
sudo /bin/sh -c "$(curl -fsSL https://powerpipe.io/install/powerpipe.sh)" >>${LOGFILE}
cd /opt/Powerpipe
powerpipe mod update
echo "\n** Update Tools ** Steampipe and Powerpipe now up to date.\n" > /proc/$(pidof /bin/bash)/fd/0

echo "Temporary Fix for scoutsuite blowout at build" >>${LOGFILE}
cd /opt/ScoutSuite
virtualenv -p python3 venv && venv/bin/pip install --no-cache-dir --upgrade pip >>${LOGFILE} && venv/bin/pip install --no-cache-dir -r requirements.txt >>${LOGFILE}
sudo sed -i '/scoutsuite/d' /etc/motd_updates 
echo "\n** Update Tools ** ScoutSuite now up to date.\n" > /proc/$(pidof /bin/bash)/fd/0

echo "Updating kubescape" >>${LOGFILE}
sudo curl -s https://raw.githubusercontent.com/kubescape/kubescape/master/install.sh | /bin/bash >>${LOGFILE} 
sudo sed -i '/kubescape/d' /etc/motd_updates 
echo "\n** Update Tools ** kubescape now up to date.\n" > /proc/$(pidof /bin/bash)/fd/0

echo "Updating grype" >>${LOGFILE}
sudo curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin >>${LOGFILE} 
sudo sed -i '/grype/d' /etc/motd_updates 
echo "\n** Update Tools ** grype now up to date.\n" > /proc/$(pidof /bin/bash)/fd/0

echo "Updating syft" >>${LOGFILE}
sudo curl -sSfL https://get.anchore.io/syft | sudo sh -s -- -b /usr/local/bin >>${LOGFILE}
sudo sed -i '/syft/d' /etc/motd_updates 
echo "\n** Update Tools ** syft now up to date.\n" > /proc/$(pidof /bin/bash)/fd/0

echo "Updating fx" >>${LOGFILE}
sudo curl https://fx.wtf/install.sh | sh >>${LOGFILE}
sudo sed -i '/fx/d' /etc/motd_updates 
echo "\n** Update Tools ** fx now up to date.\n" > /proc/$(pidof /bin/bash)/fd/0

echo "Fixings /opt permissions" >>${LOGFILE}
sudo chown container:container -Rv /opt/* >>${LOGFILE}
echo "\n** Update Tools ** /opt is now up to date - all tools are now installed.\n" > /proc/$(pidof /bin/bash)/fd/0

echo "Updated motd" >>${LOGFILE}
sudo bash -c "echo -e '-------------------------------\n\nUpdates are now complete - container will shutdown within the next 48 hours\n\n' >/etc/motd_updates"

echo "Update Script Ended: $(date +'%Y-%m-%d %H:%m:%s')" >>${LOGFILE}

# stop container exiting
sleep 48h
